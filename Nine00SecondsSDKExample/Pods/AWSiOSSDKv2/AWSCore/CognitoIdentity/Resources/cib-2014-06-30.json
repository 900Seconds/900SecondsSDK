{
  "metadata":{
    "apiVersion":"2014-06-30",
    "endpointPrefix":"cib",
    "jsonVersion":"1.1",
    "serviceFullName":"Amazon Cognito Identity Service",
    "signatureVersion":"v4",
    "targetPrefix":"AWSCognitoIdentityService",
    "protocol":"json"
  },
  "documentation":"<fullname>Amazon Cognito</fullname>\n      <p>Amazon Cognito is a web service that delivers scoped temporary credentials to mobile devices and\n         other untrusted environments. Amazon Cognito uniquely identifies a device and supplies the user\n         with a consistent identity over the lifetime of an application.</p>\n      <p>Using Amazon Cognito, you can enable authentication with one or more third-party identity\n         providers (Facebook, Google, or Login with Amazon), and you can also choose to support\n         unauthenticated access from your app. Cognito delivers a unique identifier for each user\n         and acts as an OpenID token provider trusted by AWS Security Token Service (STS) to access\n         temporary, limited-privilege AWS credentials.</p>\n      <p>To provide end-user credentials, first make an unsigned call to <a>GetId</a>. If the end\n         user is authenticated with one of the supported identity providers, set the\n            <code>Logins</code> map with the identity provider token. <code>GetId</code> returns a\n         unique identifier for the user.</p>\n      <p>Next, make an unsigned call to <a>GetOpenIdToken</a>, which returns the OpenID token\n         necessary to call STS and retrieve AWS credentials. This call expects the same\n            <code>Logins</code> map as the <code>GetId</code> call, as well as the\n            <code>IdentityID</code> originally returned by <code>GetId</code>. The token returned by\n            <code>GetOpenIdToken</code> can be passed to the STS operation <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html\">AssumeRoleWithWebIdentity</a> to retrieve AWS credentials.</p>",
  "operations":{
    "CreateIdentityPool":{
      "name":"CreateIdentityPool",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateIdentityPoolInput",
        "documentation":"<p>Input to the CreateIdentityPool action.</p>"
      },
      "output":{
        "shape":"IdentityPool",
        "documentation":"An object representing a Cognito identity\n      pool."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        },
        {
          "shape":"LimitExceededException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown when the total number of user pools has\n      exceeded a preset limit."
        }
      ],
      "documentation":"<p>Creates a new identity pool. The identity pool is a store of user identity information that\n         is specific to your AWS account. The limit on identity pools is 60 per account.</p>\n      <examples>\n         <example>\n            <name>CreateIdentityPool</name>\n            <description>The following examples show a request and response for\n                  <code>CreateIdentityPool</code>. The request and response bodies have been edited\n               for readability and may not match the stated <code>Content-Length</code>\n               values.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 369\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.CreateIdentityPool\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T205551Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#CreateIdentityPool\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityPoolName\": \"MyIdentityPool\",\n        \"AllowUnauthenticatedIdentities\": true,\n        \"SupportedLoginProviders\":\n        {\n            \"graph.facebook.com\": \"7346241598935555\",\n            \"accounts.google.com\": \"123456789012.apps.googleusercontent.com\",\n            \"www.amazon.com\": \"amzn1.application-oa2-client.188a56d827a7d6555a8b67a5d\"\n        }\n    }\n}              \n            </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: 15cc73a1-0780-460c-91e8-e12ef034e116\ndate: Mon, 04 Aug 2014 20:55:52 GMT\ncontent-type: application/json\ncontent-length: 1091\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#IdentityPool\",\n        \"AllowUnauthenticatedIdentities\": true,\n        \"IdentityPoolId\": \"us-east-1:1cf667a2-49a6-454b-9e45-23199EXAMPLE\",\n        \"IdentityPoolName\": \"MyIdentityPool\",\n        \"SupportedLoginProviders\":\n        {\n            \"accounts.google.com\": \"123456789012.apps.googleusercontent.com\",\n            \"graph.facebook.com\": \"7346241598935555\",\n            \"www.amazon.com\": \"amzn1.application-oa2-client.188a56d827a7d6555a8b67a5d\"\n        }\n    },\n    \"Version\": \"1.0\"\n}\n            </response>\n         </example>\n      </examples>"
    },
    "DeleteIdentityPool":{
      "name":"DeleteIdentityPool",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteIdentityPoolInput",
        "documentation":"<p>Input to the DeleteIdentityPool action.</p>"
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with\n         the pool.</p>\n      <examples>\n         <example>\n            <name>DeleteIdentityPool</name>\n            <description>The following is an example of a <code>DeleteIdentityPool</code> request. The request\n               body has been formatted for readability and may not match the\n               <code>content-length</code> value.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 222\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.DeleteIdentityPool\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T214319Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#DeleteIdentityPool\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityPoolId\": \"us-east-1:177a950c-2c08-43f0-9983-28727EXAMPLE\"\n    }\n}\n            </request>\n         </example>\n      </examples>"
    },
    "DescribeIdentityPool":{
      "name":"DescribeIdentityPool",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeIdentityPoolInput",
        "documentation":"Input to the DescribeIdentityPool\n      action."
      },
      "output":{
        "shape":"IdentityPool",
        "documentation":"An object representing a Cognito identity\n      pool."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Gets details about a particular identity pool, including the pool name, ID description,\n         creation date, and current number of users.</p>\n      <examples>\n         <example>\n            <name>DescribeIdentityPool</name>\n            <description>The following examples show a request and response for the\n               <code>DescribeIdentityPool</code> operation. The request and response bodies have been edited for\n               readability and may not match the stated <code>content-length</code> values.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 224\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.DescribeIdentityPool\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T203833Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#DescribeIdentityPool\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityPoolId\": \"us-east-1:177a950c-2c08-43f0-9983-28727EXAMPLE\"\n    }\n}   \n            </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: c5cc0ad5-c604-455a-87ee-cb830b22341a\ndate: Mon, 04 Aug 2014 20:38:33 GMT\ncontent-type: application/json\ncontent-length: 367\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#IdentityPool\",\n        \"AllowUnauthenticatedIdentities\": true,\n        \"IdentityPoolId\": \"us-east-1:177a950c-2c08-43f0-9983-28727EXAMPLE\",\n        \"IdentityPoolName\": \"MyIdentityPool\",\n        \"SupportedLoginProviders\":\n        {\n            \"accounts.google.com\": \"123456789012.apps.googleusercontent.com\",\n            \"graph.facebook.com\": \"7346241598935555\",\n            \"www.amazon.com\": \"amzn1.application-oa2-client.188a56d827a7d6555a8b67a5d\"\n        }\n    },\n    \"Version\": \"1.0\"\n}\n\n            </response>\n         </example>\n      </examples>"
    },
    "GetId":{
      "name":"GetId",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"GetIdInput",
        "documentation":"Input to the GetId action."
      },
      "output":{
        "shape":"GetIdResponse",
        "documentation":"Returned in the response to a GetId\n      request."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        },
        {
          "shape":"LimitExceededException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown when the total number of user pools has\n      exceeded a preset limit."
        }
      ],
      "documentation":"<p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit\n         linked account.</p>\n      <examples>\n         <example>\n            <name>GetId</name>\n            <description> The following example shows a <code>GetId</code> request for an unauthenticated\n               identity. The request body has been edited for readability and may not match the\n               stated <code>content-length</code>.</description>\n            <request> \nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 252\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.GetId\nHOST: <endpoint>\nX-AMZ-DATE: 20140730T232759Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#GetId\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"AccountId\": \"123456789012\",\n        \"IdentityPoolId\": \"us-east-1:177a950c-2c08-43f0-9983-28727EXAMPLE\"\n    }\n}\n               </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: ff1ca798-b930-4b81-9ef3-c02e770188af\ndate: Mon, 04 Aug 2014 22:03:36 GMT\ncontent-type: application/json\ncontent-length: 152\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#GetIdResponse\",\n        \"IdentityId\": \"us-east-1:88859bc9-0149-4183-bf10-39e36EXAMPLE\"\n    },\n    \"Version\": \"1.0\"\n}\n               </response>\n         </example>\n      </examples>"
    },
    "GetOpenIdToken":{
      "name":"GetOpenIdToken",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"GetOpenIdTokenInput",
        "documentation":"Input to the GetOpenIdToken action."
      },
      "output":{
        "shape":"GetOpenIdTokenResponse",
        "documentation":"Returned in response to a successful\n      GetOpenIdToken request."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by\n         <a>GetId</a>. You can optionally add additional logins for the identity. Supplying multiple logins\n         creates an implicit link.</p>\n      <p>The OpenId token is valid for 15 minutes.</p>\n      <examples>\n         <example>\n            <name>GetOpenIdToken</name>\n            <description>The following examples show a GetOpenIdToken request and response, without\n               the optional login values.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 214\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.GetOpenIdToken\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T220736Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#GetOpenIdToken\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityId\": \"us-east-1:88859bc9-0149-4183-bf10-39e36EXAMPLE\"\n    }\n}\n         </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: 552b7593-5b83-47d5-ab25-65d3cd31d823\ndate: Mon, 04 Aug 2014 22:07:37 GMT\ncontent-type: application/json\ncontent-length: 892\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#GetOpenIdTokenResponse\",\n        \"IdentityId\": \"us-east-1:88859bc9-0149-4183-bf10-39e36EXAMPLE\",\n        \"Token\": \"eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXUyIsImtpZCI6InVzLWVhc3QtMTEifQ.eyJleHAiOjE0MDcxOTA2NTcsInN1YiI6InVzLWVhc3QtMTo4ODg1OWJjOS0wMTQ5LTQxODMtYmYxMC0zOWUzNjY5OTBiMmUiLCJhdWQiOiJ1cy1lYXN0LTE6MWNmNjY3YTItNDlhNi00NTRiLTllNDUtMjMxOTkwMzUxYTMxIiwiaXNzIjoiaHR0cHM6Ly9hd3MtY29nbml0by1pZGVudGl0eS1wdWJsaWMtcGR4LWJldGEuYW1hem9uLmNvbSIsImlhdCI6MTQwNzE5MDA1NywiYW1yIjpbInVuYXV0aGVudGljYXRlZCJdfQ.eYNoTEXndsGk5RAatIOEekNKM1JtL3-C9A6qWcnK2u5fvNsiiSDqWDLtziX6qnnoZXszBmwsIiklYs9J07I-2bCfcRA8PeW6g_br2I9lGuXB_nW_c-CnBNS1xnJhR9QGunQwZklXhDr-ifCCBQgcbMd5mIz_ulurTmmPyIfoJFRZIFNhPLPlOiUjnprDLISe34WkRBTDlsAqCE0VCi3FBXJijQ4D3yUQDxacEoBXMZnTBk_fjKS4GmGAD_GsDIM6PbQMc6xvDhltmcjv3ycBir2CPv2otNtboJvd9HnxcV6sxZrf2ATANaJbMJlu00kbzqkxFyDioIWJkyPEXAMPLE\"\n    },\n    \"Version\": \"1.0\"\n}\n               </response>\n         </example>\n      </examples>"
    },
    "GetOpenIdTokenForDeveloperIdentity":{
      "name":"GetOpenIdTokenForDeveloperIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetOpenIdTokenForDeveloperIdentityInput"},
      "output":{"shape":"GetOpenIdTokenForDeveloperIdentityResponse"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        },
        {
          "shape":"DeveloperUserAlreadyRegisteredException",
          "error":{"httpStatusCode":400},
          "exception":true
        }
      ]
    },
    "ListIdentities":{
      "name":"ListIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ListIdentitiesInput",
        "documentation":"Input to the ListIdentities action."
      },
      "output":{
        "shape":"ListIdentitiesResponse",
        "documentation":"The response to a ListIdentities\n      request."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Lists the identities in a pool.</p>\n      <examples>\n         <example>\n            <name>ListIdentities</name>\n            <description>The following examples show a request and a response for the\n               <code>ListIdentities</code> action. The request and response bodies have been formatted for\n               readability and may not match the <code>content-length</code> value.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 234\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.ListIdentities\nHOST: <endpoint>\nX-AMZ-DATE: 20140805T162253Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#ListIdentities\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityPoolId\": \"us-east-1:509f9747-5b5d-484e-a2d7-74fcba108147\",\n        \"MaxResults\": 10\n    }\n}\n               </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: 75dbdfc0-29a2-4177-98e5-602c8f2c21eb\ndate: Tue, 05 Aug 2014 16:22:54 GMT\ncontent-type: application/json\ncontent-length: 353\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#ListIdentitiesResponse\",\n        \"Identities\": [\n        {\n            \"IdentityId\": \"us-east-1:1eeb6443-3fbc-4d3f-a96c-28ff0EXAMPLE\",\n            \"Logins\": null\n        },\n        {\n            \"IdentityId\": \"us-east-1:6820d0d3-3c95-4d9f-8813-c4448EXAMPLE\",\n            \"Logins\": null\n        }],\n        \"IdentityPoolId\": \"us-east-1:509f9747-5b5d-484e-a2d7-74fcbEXAMPLE\",\n        \"NextToken\": null\n    },\n    \"Version\": \"1.0\"\n}\n               </response>\n         </example>\n      </examples>"
    },
    "ListIdentityPools":{
      "name":"ListIdentityPools",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ListIdentityPoolsInput",
        "documentation":"Input to the ListIdentityPools\n      action."
      },
      "output":{
        "shape":"ListIdentityPoolsResponse",
        "documentation":"The result of a successful ListIdentityPools\n      action."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Lists all of the Cognito identity pools registered for your account.</p>\n      <examples>\n         <example>\n            <name>ListIdentityPools</name>\n            <description>The following examples show a request and a response for a\n               <code>ListIdentityPools</code> operation. The request and response bodies have been edited for\n               readability and may not match the stated <code>content-length</code> values.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 171\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.ListIdentityPools\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T193802Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#ListIdentityPools\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"MaxResults\": 3\n    }\n}\n            </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: 84423a7a-4db8-437f-9dfa-f60aacc0f85f\ndate: Mon, 04 Aug 2014 19:38:03 GMT\ncontent-type: application/json\ncontent-length: 521\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#ListIdentityPoolsResponse\",\n        \"IdentityPools\": [\n        {\n            \"IdentityPoolId\": \"us-east-1:0248e249-21e7-495a-9dd5-b2444EXAMPLE\",\n            \"IdentityPoolName\": \"MyIdentityPool1\"\n        },\n        {\n            \"IdentityPoolId\": \"us-east-1:04507bc2-9e14-4d1b-8cbf-b6f51EXAMPLE\",\n            \"IdentityPoolName\": \"MyIdentityPool2\"\n        },\n        {\n            \"IdentityPoolId\": \"us-east-1:177a950c-2c08-43f0-9983-28727EXAMPLE\",\n            \"IdentityPoolName\": \"MyIdentityPool3\"\n        }],\n        \"NextToken\": \"dXMtZWFzdC0xOjE3N2E5NTBjLTJjMDgtNDNmMC05OTgzLTI4NzI3YjQ0N2Y4MA==\"\n    },\n    \"Version\": \"1.0\"\n}\n            </response>\n         </example>\n      </examples>"
    },
    "LookupDeveloperIdentity":{
      "name":"LookupDeveloperIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"LookupDeveloperIdentityInput"},
      "output":{"shape":"LookupDeveloperIdentityResponse"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ]
    },
    "MergeDeveloperIdentities":{
      "name":"MergeDeveloperIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"MergeDeveloperIdentitiesInput"},
      "output":{"shape":"MergeDeveloperIdentitiesResponse"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ]
    },
    "UnlinkDeveloperIdentity":{
      "name":"UnlinkDeveloperIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UnlinkDeveloperIdentityInput"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ]
    },
    "UnlinkIdentity":{
      "name":"UnlinkIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"UnlinkIdentityInput",
        "documentation":"Input to the UnlinkIdentity action."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Unlinks a federated identity from an existing account. Unlinked logins will be considered\n         new identities next time they are seen. Removing the last linked login will make this\n         identity inaccessible.</p>\n      <examples>\n         <example>\n            <name>UnlinkIdentity</name>\n            <description>The following example shows an <code>UnlinkIdentity</code> request. The request body has\n               been formatted for readability and may not match the <code>content-length</code>\n               value.</description>\n            <request>\n               POST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 307\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.UnlinkIdentity\nHOST: <endpoint>\nX-AMZ-DATE: 20140805T164904Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#UnlinkIdentity\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityId\": \"us-east-1:6820d0d3-3c95-4d9f-8813-c4448fca995f\",\n        \"Logins\":\n        {\n            \"accounts.google.com\": \"<PROVIDER_TOKEN>\"\n        },\n        \"LoginsToRemove\": [\"accounts.google.com\"]\n    }\n}\n               </request>\n         </example>\n      </examples>"
    },
    "UpdateIdentityPool":{
      "name":"UpdateIdentityPool",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"IdentityPool",
        "documentation":"An object representing a Cognito identity\n      pool."
      },
      "output":{
        "shape":"IdentityPool",
        "documentation":"An object representing a Cognito identity\n      pool."
      },
      "errors":[
        {
          "shape":"InvalidParameterException",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"Thrown for missing or bad input\n      parameter(s)."
        },
        {
          "shape":"ResourceNotFoundException",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
        },
        {
          "shape":"NotAuthorizedException",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
        },
        {
          "shape":"ResourceConflictException",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
        },
        {
          "shape":"TooManyRequestsException",
          "error":{"httpStatusCode":429},
          "exception":true,
          "documentation":"Thrown when a request is\n      throttled."
        },
        {
          "shape":"InternalErrorException",
          "exception":true,
          "fault":true,
          "documentation":"Thrown when the service encounters an error during\n      processing the request."
        }
      ],
      "documentation":"<p>Updates a user pool.</p>\n      <examples>\n         <example>\n            <name>UpdateIdentityPool</name>\n            <description>The following examples show a request and response for the <code>UpdateIdentityPool</code> action.\n               The request and response bodies have been formatted for readability and may not match\n               the <code>content-length</code> value.</description>\n            <request>\nPOST / HTTP/1.1\nCONTENT-TYPE: application/json\nCONTENT-LENGTH: 423\nX-AMZ-TARGET: com.amazonaws.cognito.identity.model.AWSCognitoIdentityService.UpdateIdentityPool\nHOST: <endpoint>\nX-AMZ-DATE: 20140804T232959Z\nAUTHORIZATION: AWS4-HMAC-SHA256 Credential=<credential>, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature=<signature>\n \n{\n    \"Operation\": \"com.amazonaws.cognito.identity.model#UpdateIdentityPool\",\n    \"Service\": \"com.amazonaws.cognito.identity.model#AWSCognitoIdentityService\",\n    \"Input\":\n    {\n        \"IdentityPoolId\": \"us-east-1:c1731993-c776-4ae2-86c6-554aeEXAMPLE\",\n        \"IdentityPoolName\": \"MyIdentityPool\",\n        \"AllowUnauthenticatedIdentities\": true,\n        \"SupportedLoginProviders\":\n        {\n            \"www.amazon.com\": \"amzn1.application-oa2-client.188a56d827a7d6555a8b67a5d\", \n            \"graph.facebook.com\": \"7346241598935555\", \n            \"accounts.google.com\": \"123456789012.apps.googleusercontent.com\"\n        }\n    }\n}             \n               </request>\n            <response>\n1.1 200 OK\nx-amzn-requestid: a1174234-ef05-4c60-bfcb-04176a6ba6a3\ndate: Mon, 04 Aug 2014 23:30:00 GMT\ncontent-type: application/json\ncontent-length: 356\n \n{\n    \"Output\":\n    {\n        \"__type\": \"com.amazonaws.cognito.identity.model#IdentityPool\",\n        \"AllowUnauthenticatedIdentities\": true,\n        \"IdentityPoolId\": \"us-east-1:c1731993-c776-4ae2-86c6-554aeEXAMPLE\",\n        \"IdentityPoolName\": \"MyIdentityPool\",\n        \"SupportedLoginProviders\":\n        {\n            \"www.amazon.com\": \"amzn1.application-oa2-client.188a56d827a7d6555a8b67a5d\", \n            \"graph.facebook.com\": \"7346241598935555\", \n            \"accounts.google.com\": \"123456789012.apps.googleusercontent.com\"\n        }\n    },\n    \"Version\": \"1.0\"\n}\n               </response>\n         </example>\n      </examples>"
    }
  },
  "shapes":{
    "AccountId":{
      "type":"string",
      "min":1,
      "max":15,
      "pattern":"\\d+"
    },
    "CreateIdentityPoolInput":{
      "type":"structure",
      "required":[
        "IdentityPoolName",
        "AllowUnauthenticatedIdentities"
      ],
      "members":{
        "IdentityPoolName":{
          "shape":"IdentityPoolName",
          "documentation":"<p>A string that you provide.</p>"
        },
        "AllowUnauthenticatedIdentities":{
          "shape":"IdentityPoolUnauthenticated",
          "documentation":"<p>TRUE if the identity pool supports unauthenticated logins.</p>"
        },
        "SupportedLoginProviders":{
          "shape":"IdentityProviders",
          "documentation":"<p>Optional key:value pairs mapping provider names to provider app IDs.</p>"
        },
        "DeveloperProviderName":{"shape":"DeveloperProviderName"}
      },
      "documentation":"<p>Input to the CreateIdentityPool action.</p>"
    },
    "DeleteIdentityPoolInput":{
      "type":"structure",
      "required":["IdentityPoolId"],
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the format\n      REGION:GUID."
        }
      },
      "documentation":"<p>Input to the DeleteIdentityPool action.</p>"
    },
    "DescribeIdentityPoolInput":{
      "type":"structure",
      "required":["IdentityPoolId"],
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the\n      format REGION:GUID."
        }
      },
      "documentation":"Input to the DescribeIdentityPool\n      action."
    },
    "DeveloperProviderName":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w._-]+"
    },
    "DeveloperUserAlreadyRegisteredException":{
      "type":"structure",
      "members":{
        "message":{"shape":"String"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "DeveloperUserIdentifier":{"type":"string"},
    "DeveloperUserIdentifierList":{
      "type":"list",
      "member":{"shape":"DeveloperUserIdentifier"}
    },
    "GetIdInput":{
      "type":"structure",
      "required":[
        "AccountId",
        "IdentityPoolId"
      ],
      "members":{
        "AccountId":{
          "shape":"AccountId",
          "documentation":"A standard AWS account ID (9+\n      digits)."
        },
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the format\n      REGION:GUID."
        },
        "Logins":{
          "shape":"LoginsMap",
          "documentation":"<p>A set of optional name/value pairs that map provider names to provider tokens.</p>\n      <p>The available provider names for <code>Logins</code> are as follows: <ul>\n            <li>Facebook: <code>graph.facebook.com</code>\n</li>\n            <li>Google: <code>accounts.google.com</code>\n</li>\n            <li>Amazon: <code>www.amazon.com</code>\n</li>\n         </ul>\n      </p>"
        }
      },
      "documentation":"Input to the GetId action."
    },
    "GetIdResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{
          "shape":"IdentityId",
          "documentation":"A unique identifier in the format\n      REGION:GUID."
        }
      },
      "documentation":"Returned in the response to a GetId\n      request."
    },
    "GetOpenIdTokenForDeveloperIdentityInput":{
      "type":"structure",
      "required":[
        "IdentityPoolId",
        "Logins"
      ],
      "members":{
        "IdentityPoolId":{"shape":"IdentityPoolId"},
        "IdentityId":{"shape":"IdentityId"},
        "Logins":{"shape":"LoginsMap"},
        "TokenDuration":{"shape":"TokenDuration"}
      }
    },
    "GetOpenIdTokenForDeveloperIdentityResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"},
        "Token":{"shape":"OIDCToken"}
      }
    },
    "GetOpenIdTokenInput":{
      "type":"structure",
      "required":["IdentityId"],
      "members":{
        "IdentityId":{
          "shape":"IdentityId",
          "documentation":"A unique identifier in the format\n      REGION:GUID."
        },
        "Logins":{
          "shape":"LoginsMap",
          "documentation":"A set of optional name/value pairs that map\n      provider names to provider tokens."
        }
      },
      "documentation":"Input to the GetOpenIdToken action."
    },
    "GetOpenIdTokenResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{
          "shape":"IdentityId",
          "documentation":"A unique identifier in the format\n      REGION:GUID. Note that the IdentityId returned may not match the one passed on\n      input."
        },
        "Token":{
          "shape":"OIDCToken",
          "documentation":"An OpenID token, valid for 15\n      minutes."
        }
      },
      "documentation":"Returned in response to a successful\n      GetOpenIdToken request."
    },
    "IdentitiesList":{
      "type":"list",
      "member":{"shape":"IdentityDescription"}
    },
    "IdentityDescription":{
      "type":"structure",
      "members":{
        "IdentityId":{
          "shape":"IdentityId",
          "documentation":"A unique identifier in the format\n      REGION:GUID."
        },
        "Logins":{
          "shape":"LoginsList",
          "documentation":"A set of optional name/value pairs that map\n      provider names to provider tokens."
        }
      },
      "documentation":"A description of the identity."
    },
    "IdentityId":{
      "type":"string",
      "min":1,
      "max":50,
      "pattern":"[\\w-]+:[0-9a-f-]+"
    },
    "IdentityPool":{
      "type":"structure",
      "required":[
        "IdentityPoolId",
        "IdentityPoolName",
        "AllowUnauthenticatedIdentities"
      ],
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the format\n      REGION:GUID."
        },
        "IdentityPoolName":{
          "shape":"IdentityPoolName",
          "documentation":"<p>A string that you provide.</p>"
        },
        "AllowUnauthenticatedIdentities":{
          "shape":"IdentityPoolUnauthenticated",
          "documentation":"TRUE if the identity pool\n      supports unauthenticated logins."
        },
        "SupportedLoginProviders":{
          "shape":"IdentityProviders",
          "documentation":"<p>Optional key:value pairs mapping provider names to provider app IDs.</p>"
        },
        "DeveloperProviderName":{"shape":"DeveloperProviderName"}
      },
      "documentation":"An object representing a Cognito identity\n      pool."
    },
    "IdentityPoolId":{
      "type":"string",
      "min":1,
      "max":50,
      "pattern":"[\\w-]+:[0-9a-f-]+"
    },
    "IdentityPoolName":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w ]+"
    },
    "IdentityPoolShortDescription":{
      "type":"structure",
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the\n      format REGION:GUID."
        },
        "IdentityPoolName":{
          "shape":"IdentityPoolName",
          "documentation":"A string that you\n      provide."
        }
      },
      "documentation":"A description of the identity\n      pool."
    },
    "IdentityPoolUnauthenticated":{"type":"boolean"},
    "IdentityPoolsList":{
      "type":"list",
      "member":{"shape":"IdentityPoolShortDescription"}
    },
    "IdentityProviderId":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w._-]+"
    },
    "IdentityProviderName":{
      "type":"string",
      "min":1,
      "max":128,
      "pattern":"[\\w._-]+"
    },
    "IdentityProviderToken":{
      "type":"string",
      "min":1,
      "max":1024,
      "pattern":"[\\S]+"
    },
    "IdentityProviders":{
      "type":"map",
      "key":{"shape":"IdentityProviderName"},
      "value":{"shape":"IdentityProviderId"},
      "max":10
    },
    "InternalErrorException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by an\n      InternalErrorException."
        }
      },
      "exception":true,
      "fault":true,
      "documentation":"Thrown when the service encounters an error during\n      processing the request."
    },
    "InvalidParameterException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by an\n      InvalidParameterException."
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"Thrown for missing or bad input\n      parameter(s)."
    },
    "LimitExceededException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by a\n      LimitExceededException."
        }
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"Thrown when the total number of user pools has\n      exceeded a preset limit."
    },
    "ListIdentitiesInput":{
      "type":"structure",
      "required":[
        "IdentityPoolId",
        "MaxResults"
      ],
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the format\n      REGION:GUID."
        },
        "MaxResults":{
          "shape":"QueryLimit",
          "documentation":"The maximum number of identities to\n      return."
        },
        "NextToken":{
          "shape":"PaginationKey",
          "documentation":"A pagination token."
        }
      },
      "documentation":"Input to the ListIdentities action."
    },
    "ListIdentitiesResponse":{
      "type":"structure",
      "members":{
        "IdentityPoolId":{
          "shape":"IdentityPoolId",
          "documentation":"An identity pool ID in the format\n      REGION:GUID."
        },
        "Identities":{
          "shape":"IdentitiesList",
          "documentation":"An object containing a set of\n      identities and associated mappings."
        },
        "NextToken":{
          "shape":"PaginationKey",
          "documentation":"A pagination token."
        }
      },
      "documentation":"The response to a ListIdentities\n      request."
    },
    "ListIdentityPoolsInput":{
      "type":"structure",
      "required":["MaxResults"],
      "members":{
        "MaxResults":{
          "shape":"QueryLimit",
          "documentation":"The maximum number of identities to\n      return."
        },
        "NextToken":{
          "shape":"PaginationKey",
          "documentation":"A pagination token."
        }
      },
      "documentation":"Input to the ListIdentityPools\n      action."
    },
    "ListIdentityPoolsResponse":{
      "type":"structure",
      "members":{
        "IdentityPools":{
          "shape":"IdentityPoolsList",
          "documentation":"The identity pools returned by\n      the ListIdentityPools action."
        },
        "NextToken":{
          "shape":"PaginationKey",
          "documentation":"A pagination token."
        }
      },
      "documentation":"The result of a successful ListIdentityPools\n      action."
    },
    "LoginsList":{
      "type":"list",
      "member":{"shape":"IdentityProviderName"}
    },
    "LoginsMap":{
      "type":"map",
      "key":{"shape":"IdentityProviderName"},
      "value":{"shape":"IdentityProviderToken"},
      "max":10
    },
    "LookupDeveloperIdentityInput":{
      "type":"structure",
      "required":["IdentityPoolId"],
      "members":{
        "IdentityPoolId":{"shape":"IdentityPoolId"},
        "IdentityId":{"shape":"IdentityId"},
        "DeveloperUserIdentifier":{"shape":"DeveloperUserIdentifier"},
        "MaxResults":{"shape":"QueryLimit"},
        "NextToken":{"shape":"PaginationKey"}
      }
    },
    "LookupDeveloperIdentityResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"},
        "DeveloperUserIdentifierList":{"shape":"DeveloperUserIdentifierList"},
        "NextToken":{"shape":"PaginationKey"}
      }
    },
    "MergeDeveloperIdentitiesInput":{
      "type":"structure",
      "required":[
        "SourceUserIdentifier",
        "DestinationUserIdentifier",
        "DeveloperProviderName",
        "IdentityPoolId"
      ],
      "members":{
        "SourceUserIdentifier":{"shape":"DeveloperUserIdentifier"},
        "DestinationUserIdentifier":{"shape":"DeveloperUserIdentifier"},
        "DeveloperProviderName":{"shape":"DeveloperProviderName"},
        "IdentityPoolId":{"shape":"IdentityPoolId"}
      }
    },
    "MergeDeveloperIdentitiesResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "NotAuthorizedException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by a\n      NotAuthorizedException"
        }
      },
      "error":{"httpStatusCode":403},
      "exception":true,
      "documentation":"Thrown when a user is not authorized to access the\n      requested resource."
    },
    "OIDCToken":{"type":"string"},
    "PaginationKey":{
      "type":"string",
      "min":1
    },
    "QueryLimit":{
      "type":"integer",
      "min":1,
      "max":60
    },
    "ResourceConflictException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by a\n      ResourceConflictException."
        }
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"Thrown when a user tries to use a login which\n      is already linked to another account."
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"The message returned by a\n      ResourceNotFoundException."
        }
      },
      "error":{"httpStatusCode":404},
      "exception":true,
      "documentation":"Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
    },
    "String":{"type":"string"},
    "TokenDuration":{
      "type":"long",
      "min":1,
      "max":86400
    },
    "TooManyRequestsException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"Message returned by a\n      TooManyRequestsException"
        }
      },
      "error":{"httpStatusCode":429},
      "exception":true,
      "documentation":"Thrown when a request is\n      throttled."
    },
    "UnlinkDeveloperIdentityInput":{
      "type":"structure",
      "required":[
        "IdentityId",
        "IdentityPoolId",
        "DeveloperProviderName",
        "DeveloperUserIdentifier"
      ],
      "members":{
        "IdentityId":{"shape":"IdentityId"},
        "IdentityPoolId":{"shape":"IdentityPoolId"},
        "DeveloperProviderName":{"shape":"DeveloperProviderName"},
        "DeveloperUserIdentifier":{"shape":"DeveloperUserIdentifier"}
      }
    },
    "UnlinkIdentityInput":{
      "type":"structure",
      "required":[
        "IdentityId",
        "Logins",
        "LoginsToRemove"
      ],
      "members":{
        "IdentityId":{
          "shape":"IdentityId",
          "documentation":"A unique identifier in the format\n      REGION:GUID."
        },
        "Logins":{
          "shape":"LoginsMap",
          "documentation":"A set of optional name/value pairs that map\n      provider names to provider tokens."
        },
        "LoginsToRemove":{
          "shape":"LoginsList",
          "documentation":"Provider names to unlink from this\n      identity."
        }
      },
      "documentation":"Input to the UnlinkIdentity action."
    }
  }
}
